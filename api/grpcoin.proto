syntax = "proto3";
package grpcoin;
option go_package = "api/grpcoin";

import "google/protobuf/timestamp.proto";

service TickerInfo {
    // Watch returns real-time quotes of the ticker.
    // The only supported ticker is "BTC-USD".
    //
    // The stream might return error (if it fails to get prices) or
    // time out if you stream it for over 15 minutes.
    // If the stream terminates, please reconnect.
    rpc Watch(Ticker) returns (stream TickerQuote){}
}

service Account {
    rpc TestAuth(TestAuthRequest) returns (TestAuthResponse) {}
}

// service PaperTrade {
//     rpc Portfolio(PortfolioRequest) returns (PortfolioResponse) {}
//     // order history
//     // trading methods sell/buy
// }


message Amount {
    // The whole units of the amount.
    // For example if `currencyCode` is `"USD"`, then 1 unit is one US dollar.
    int64 units = 1;

    // Number of nano (10^-9) units of the amount.
    // The value must be between -999,999,999 and +999,999,999 inclusive.
    // If `units` is positive, `nanos` must be positive or zero.
    // If `units` is zero, `nanos` can be positive, zero, or negative.
    // If `units` is negative, `nanos` must be negative or zero.
    // For example $-1.75 is represented as `units`=-1 and `nanos`=-750,000,000.
    int32 nanos = 2;
}

message Empty {}
message TestAuthRequest {}
message TestAuthResponse {}

message Ticker {
    string ticker = 1; // e.g. BTC-USD
}

message TickerQuote {
    google.protobuf.Timestamp t = 10;
    Amount price = 20;
}

// message PortfolioRequest {}

// message PortfolioResponse {
//     repeated PortfolioPosition positions = 1;
// }

// message PortfolioPosition {
//     Ticker ticker = 1;
//     Amount amount = 2;
// }
